@model  EcommerceAPI.Model.Common.PaginatedList<EcommerceAPI.Model.Product.ProductViewModel>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                Name
            </th>
            <th>
                UnitStock
            </th>
            <th>
                Rating
            </th>
            <th>
                Price
            </th>
            <th>
                Create_at
            </th>
            <th>
                Modify_at
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UnitStock)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Rating)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Create_at)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Modify_at)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Update", new { Id = item.Id }) |
                    @Html.ActionLink("Details", "Details", new { Id = item.Id }) |
                    @Html.ActionLink("Delete", "Delete", new { Id = item.Id })
                </td>
            </tr>
        }
    </tbody>
</table>
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<nav aria-label="Page navigation example">
    <ul class="pagination">
        <li class="page-item">
            <a asp-action="Index" class="page-link btn btn-default @prevDisabled" aria-label="Previous" asp-route-pageNumber="@(Model.PageIndex - 1)">
                <span aria-hidden="true">&raquo;</span>
                <span class="sr-only">Previous</span>
            </a>
        </li>
        @for (int index = 1; index <= Model.TotalPages; index++)
        {
            if (index == Model.PageIndex)
            {
                <li class="page-item active">
                    <a asp-action="Index" class="page-link" asp-route-pageNumber="@index">
                        @index
                    </a>
                </li>
            }
            else
            {
                <li class="page-item">
                    <a asp-action="Index" class="page-link" asp-route-pageNumber="@index">
                        @index
                    </a>
                </li>
            }
        }
    <li class="page-item">
        @{
            var pageNumbr = Model.PageIndex < Model.TotalPages ? Model.PageIndex + 1 : Model.TotalPages;
         }
            <a class="page-link @nextDisabled" aria-label="Next" asp-action="Index" asp-route-pageNumber="@(pageNumbr)">
                <span aria-hidden="true">&raquo;</span>
                <span class="sr-only">Next</span>
            </a>
        </li>
    </ul>
</nav>
